{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Text, Group } from '@antv/g';\nimport { get, deepMix, pick, keys, find, size, last } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { PLOT_CLASS_NAME } from '../runtime';\nimport { select } from '../utils/selection';\nimport { treeDataTransform } from '../utils/treeDataTransform';\nimport { legendClearSetState } from './legendFilter';\n// Get element.\nconst getElements = plot => {\n  return plot.querySelectorAll('.element');\n};\nfunction selectPlotArea(root) {\n  return select(root).select(`.${PLOT_CLASS_NAME}`).node();\n}\n// Default breadCrumb config.\nconst DEFAULT_BREADCRUMB_STYLE = {\n  breadCrumbFill: 'rgba(0, 0, 0, 0.85)',\n  breadCrumbFontSize: 12,\n  breadCrumbY: 12,\n  activeFill: 'rgba(0, 0, 0, 0.5)'\n};\n/**\n * TreemapDrillDown interaction.\n */\nexport function TreemapDrillDown(drillDownOptions = {}) {\n  const {\n      originData = [],\n      layout\n    } = drillDownOptions,\n    style = __rest(drillDownOptions, [\"originData\", \"layout\"]);\n  const breadCrumb = deepMix({}, DEFAULT_BREADCRUMB_STYLE, style);\n  const breadCrumbStyle = subObject(breadCrumb, 'breadCrumb');\n  const breadCrumbActiveStyle = subObject(breadCrumb, 'active');\n  return context => {\n    const {\n      update,\n      setState,\n      container,\n      options\n    } = context;\n    const plotArea = selectPlotArea(container);\n    const mark = options.marks[0];\n    const {\n      state\n    } = mark;\n    // Create breadCrumbTextsGroup,save textSeparator、drillTexts.\n    const textGroup = new Group();\n    plotArea.appendChild(textGroup);\n    // Modify the data and scale according to the path and the level of the current click, so as to achieve the effect of drilling down and drilling up and initialization.\n    const drillDownClick = (path, depth) => __awaiter(this, void 0, void 0, function* () {\n      // Clear text.\n      textGroup.removeChildren();\n      // More path creation text.\n      if (depth) {\n        let name = '';\n        let y = breadCrumbStyle.y;\n        let x = 0;\n        const textPath = [];\n        const maxWidth = plotArea.getBBox().width;\n        // Create path: 'type1 / type2 / type3' -> '/ type1 / type2 / type3'.\n        const drillTexts = path.map((text, index) => {\n          name = `${name}${text}/`;\n          textPath.push(text);\n          const drillText = new Text({\n            name: name.replace(/\\/$/, ''),\n            style: Object.assign(Object.assign({\n              text,\n              x,\n              // @ts-ignore\n              path: [...textPath],\n              depth: index\n            }, breadCrumbStyle), {\n              y\n            })\n          });\n          textGroup.appendChild(drillText);\n          x += drillText.getBBox().width;\n          const textSeparator = new Text({\n            style: Object.assign(Object.assign({\n              x,\n              text: ' / '\n            }, breadCrumbStyle), {\n              y\n            })\n          });\n          textGroup.appendChild(textSeparator);\n          x += textSeparator.getBBox().width;\n          /**\n           * Page width exceeds maximum, line feed.\n           * | ----maxWidth---- |\n           * | / tyep1 / tyep2 / type3 |\n           * ->\n           * | ----maxWidth---- |\n           * | / tyep1 / tyep2  |\n           * | / type3 |\n           */\n          if (x > maxWidth) {\n            y = textGroup.getBBox().height + breadCrumbStyle.y;\n            x = 0;\n            drillText.attr({\n              x,\n              y\n            });\n            x += drillText.getBBox().width;\n            textSeparator.attr({\n              x,\n              y\n            });\n            x += textSeparator.getBBox().width;\n          }\n          if (index === size(path) - 1) {\n            textSeparator.remove();\n          }\n          return drillText;\n        });\n        // Add Active, Add TreemapDrillDown\n        drillTexts.forEach((item, index) => {\n          // Last drillText\n          if (index === size(drillTexts) - 1) return;\n          const originalAttrs = Object.assign({}, item.attributes);\n          item.attr('cursor', 'pointer');\n          item.addEventListener('mouseenter', () => {\n            item.attr(breadCrumbActiveStyle);\n          });\n          item.addEventListener('mouseleave', () => {\n            item.attr(originalAttrs);\n          });\n          item.addEventListener('click', () => {\n            drillDownClick(get(item, ['style', 'path']), get(item, ['style', 'depth']));\n          });\n        });\n      }\n      // LegendFilter interaction and treemapDrillDown clash.\n      legendClearSetState(container, setState);\n      // Update marks.\n      setState('treemapDrillDown', viewOptions => {\n        const {\n          marks\n        } = viewOptions;\n        // Add filter transform for every marks,\n        // which will skip for mark without color channel.\n        const strPath = path.join('/');\n        const newMarks = marks.map(mark => {\n          if (mark.type !== 'rect') return mark;\n          let newData = originData;\n          if (depth) {\n            const filterData = originData.filter(item => {\n              const id = get(item, ['id']);\n              return id && (id.match(`${strPath}/`) || strPath.match(id));\n            }).map(item => ({\n              value: item.height === 0 ? get(item, ['value']) : undefined,\n              name: get(item, ['id'])\n            }));\n            const {\n              paddingLeft,\n              paddingBottom,\n              paddingRight\n            } = layout;\n            // New drill layout for calculation x y and filtration data.\n            const newLayout = Object.assign(Object.assign({}, layout), {\n              paddingTop: (layout.paddingTop || textGroup.getBBox().height + 10) / (depth + 1),\n              paddingLeft: paddingLeft / (depth + 1),\n              paddingBottom: paddingBottom / (depth + 1),\n              paddingRight: paddingRight / (depth + 1),\n              path: d => d.name,\n              layer: d => d.depth === depth + 1\n            });\n            // Transform the new matrix tree data.\n            newData = treeDataTransform(filterData, newLayout, {\n              value: 'value'\n            })[0];\n          } else {\n            newData = originData.filter(item => {\n              return item.depth === 1;\n            });\n          }\n          const colorDomain = [];\n          newData.forEach(({\n            path\n          }) => {\n            colorDomain.push(last(path));\n          });\n          // TreemapDrillDown by filtering the data and scale.\n          return deepMix({}, mark, {\n            data: newData,\n            scale: {\n              color: {\n                domain: colorDomain\n              }\n            }\n          });\n        });\n        return Object.assign(Object.assign({}, viewOptions), {\n          marks: newMarks\n        });\n      });\n      // The second argument is to allow the legendFilter event to be re-added; the update method itself causes legend to lose the interaction event.\n      yield update(undefined, ['legendFilter']);\n    });\n    // Elements and BreadCrumb click.\n    const createDrillClick = e => {\n      const item = e.target;\n      if (get(item, ['markType']) !== 'rect') return;\n      const key = get(item, ['__data__', 'key']);\n      const node = find(originData, d => d.id === key);\n      // Node height = 0 no children\n      if (get(node, 'height')) {\n        drillDownClick(get(node, 'path'), get(node, 'depth'));\n      }\n    };\n    // Add click drill interaction.\n    plotArea.addEventListener('click', createDrillClick);\n    // Change attributes keys.\n    const changeStyleKey = keys(Object.assign(Object.assign({}, state.active), state.inactive));\n    const createActive = () => {\n      const elements = getElements(plotArea);\n      elements.forEach(element => {\n        const cursor = get(element, ['style', 'cursor']);\n        const node = find(originData, d => d.id === get(element, ['__data__', 'key']));\n        if (cursor !== 'pointer' && (node === null || node === void 0 ? void 0 : node.height)) {\n          element.style.cursor = 'pointer';\n          const originalAttrs = pick(element.attributes, changeStyleKey);\n          element.addEventListener('mouseenter', () => {\n            element.attr(state.active);\n          });\n          element.addEventListener('mouseleave', () => {\n            element.attr(deepMix(originalAttrs, state.inactive));\n          });\n        }\n      });\n    };\n    createActive();\n    // Animate elements update, Add active.\n    plotArea.addEventListener('mousemove', createActive);\n    return () => {\n      textGroup.remove();\n      plotArea.removeEventListener('click', createDrillClick);\n      plotArea.removeEventListener('mousemove', createActive);\n    };\n  };\n}","map":{"version":3,"names":["Text","Group","get","deepMix","pick","keys","find","size","last","subObject","PLOT_CLASS_NAME","select","treeDataTransform","legendClearSetState","getElements","plot","querySelectorAll","selectPlotArea","root","node","DEFAULT_BREADCRUMB_STYLE","breadCrumbFill","breadCrumbFontSize","breadCrumbY","activeFill","TreemapDrillDown","drillDownOptions","originData","layout","style","__rest","breadCrumb","breadCrumbStyle","breadCrumbActiveStyle","context","update","setState","container","options","plotArea","mark","marks","state","textGroup","appendChild","drillDownClick","path","depth","__awaiter","removeChildren","name","y","x","textPath","maxWidth","getBBox","width","drillTexts","map","text","index","push","drillText","replace","Object","assign","textSeparator","height","attr","remove","forEach","item","originalAttrs","attributes","addEventListener","viewOptions","strPath","join","newMarks","type","newData","filterData","filter","id","match","value","undefined","paddingLeft","paddingBottom","paddingRight","newLayout","paddingTop","d","layer","colorDomain","data","scale","color","domain","createDrillClick","e","target","key","changeStyleKey","active","inactive","createActive","elements","element","cursor","removeEventListener"],"sources":["interaction/treemapDrillDown.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}