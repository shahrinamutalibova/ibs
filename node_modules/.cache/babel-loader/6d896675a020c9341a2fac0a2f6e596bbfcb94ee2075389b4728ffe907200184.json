{"ast":null,"code":"export function parseAABB(min2) {\n  const {\n    min,\n    max\n  } = min2;\n  return [[min[0], min[1]], [max[0], max[1]]];\n}\n/**\n * Whether the `point` in `bounds`.\n * @param point\n * @param bounds\n */\nexport function isInBounds(point, bounds) {\n  const [x, y] = point;\n  const [min, max] = bounds;\n  return x >= min[0] && x <= max[0] && y >= min[1] && y <= max[1];\n}\n/**\n * Whether `b1` is overflow from `b2`.\n * @param b1\n * @param b2\n */\nexport function isOverflow(b1, b2) {\n  const [min, max] = b1;\n  return !(isInBounds(min, b2) && isInBounds(max, b2));\n}\n/**\n * Whether `b1` is overlap with `b2`.\n * @param b1\n * @param b2\n * @returns\n */\nexport function isOverlap(b1, b2) {\n  const [min1, max1] = b1;\n  const [min2, max2] = b2;\n  return min1[0] < max2[0] && max1[0] > min2[0] && min1[1] < max2[1] && max1[1] > min2[1];\n}","map":{"version":3,"names":["parseAABB","min2","min","max","isInBounds","point","bounds","x","y","isOverflow","b1","b2","isOverlap","min1","max1","max2"],"sources":["utils/bounds.ts"],"sourcesContent":[null],"mappings":"AAOA,OAAM,SAAUA,SAASA,CAACC,IAAU;EAClC,MAAM;IAAEC,GAAG;IAAEC;EAAG,CAAE,GAAGF,IAAI;EACzB,OAAO,CACL,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC,EAChB,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC,CACjB;AACH;AAEA;;;;;AAKA,OAAM,SAAUC,UAAUA,CAACC,KAAc,EAAEC,MAAc;EACvD,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK;EACpB,MAAM,CAACH,GAAG,EAAEC,GAAG,CAAC,GAAGG,MAAM;EACzB,OAAOC,CAAC,IAAIL,GAAG,CAAC,CAAC,CAAC,IAAIK,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC,IAAIK,CAAC,IAAIN,GAAG,CAAC,CAAC,CAAC,IAAIM,CAAC,IAAIL,GAAG,CAAC,CAAC,CAAC;AACjE;AAEA;;;;;AAKA,OAAM,SAAUM,UAAUA,CAACC,EAAU,EAAEC,EAAU;EAC/C,MAAM,CAACT,GAAG,EAAEC,GAAG,CAAC,GAAGO,EAAE;EACrB,OAAO,EAAEN,UAAU,CAACF,GAAG,EAAES,EAAE,CAAC,IAAIP,UAAU,CAACD,GAAG,EAAEQ,EAAE,CAAC,CAAC;AACtD;AAEA;;;;;;AAMA,OAAM,SAAUC,SAASA,CAACF,EAAU,EAAEC,EAAU;EAC9C,MAAM,CAACE,IAAI,EAAEC,IAAI,CAAC,GAAGJ,EAAE;EACvB,MAAM,CAACT,IAAI,EAAEc,IAAI,CAAC,GAAGJ,EAAE;EACvB,OACEE,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IACjBD,IAAI,CAAC,CAAC,CAAC,GAAGb,IAAI,CAAC,CAAC,CAAC,IACjBY,IAAI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAAC,CAAC,CAAC,IACjBD,IAAI,CAAC,CAAC,CAAC,GAAGb,IAAI,CAAC,CAAC,CAAC;AAErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}