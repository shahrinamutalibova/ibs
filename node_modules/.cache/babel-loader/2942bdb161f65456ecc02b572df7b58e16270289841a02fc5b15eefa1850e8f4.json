{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { groupSort, max, min, sum, mean, median, sort } from 'd3-array';\nimport { columnOf } from './utils/helper';\nfunction createReducer(channel, options, encode) {\n  const {\n    by = channel,\n    reducer = 'max'\n  } = options;\n  const [V] = columnOf(encode, by);\n  if (typeof reducer === 'function') return GI => reducer(GI, V);\n  if (reducer === 'max') return GI => max(GI, i => +V[i]);\n  if (reducer === 'min') return GI => min(GI, i => +V[i]);\n  if (reducer === 'sum') return GI => sum(GI, i => +V[i]);\n  if (reducer === 'median') return GI => median(GI, i => +V[i]);\n  if (reducer === 'mean') return GI => mean(GI, i => +V[i]);\n  if (reducer === 'first') return GI => V[GI[0]];\n  if (reducer === 'last') return GI => V[GI[GI.length - 1]];\n  throw new Error(`Unknown reducer: ${reducer}`);\n}\nfunction sortQuantitative(I, mark, options) {\n  const {\n    reverse,\n    channel\n  } = options;\n  const {\n    encode\n  } = mark;\n  const [V] = columnOf(encode, channel);\n  const sortedI = sort(I, i => V[i]);\n  if (reverse) sortedI.reverse();\n  // const s = typeof slice === 'number' ? [0, slice] : slice;\n  return [sortedI, mark];\n}\n// If domain is specified, only sort data in the domain.\nfunction filterIndex(I, values, specifiedDomain) {\n  if (!Array.isArray(specifiedDomain)) return I;\n  const domain = new Set(specifiedDomain);\n  return I.filter(i => domain.has(values[i]));\n}\nfunction sortOrdinal(I, mark, options) {\n  var _a;\n  const {\n      reverse,\n      slice,\n      channel\n    } = options,\n    rest = __rest(options, [\"reverse\", \"slice\", \"channel\"]);\n  const {\n    encode,\n    scale = {}\n  } = mark;\n  const domain = (_a = scale[channel]) === null || _a === void 0 ? void 0 : _a.domain;\n  const [T] = columnOf(encode, channel);\n  const normalizeReducer = createReducer(channel, rest, encode);\n  const SI = filterIndex(I, T, domain);\n  const sortedDomain = groupSort(SI, normalizeReducer, i => T[i]);\n  if (reverse) sortedDomain.reverse();\n  const s = typeof slice === 'number' ? [0, slice] : slice;\n  const slicedDomain = slice ? sortedDomain.slice(...s) : sortedDomain;\n  return [I, deepMix(mark, {\n    scale: {\n      [channel]: {\n        domain: slicedDomain\n      }\n    }\n  })];\n}\n/**\n * Sort marks groups by groups.\n */\nexport const Sort = (options = {}) => {\n  const {\n      reverse = false,\n      slice,\n      channel,\n      ordinal = true\n    } = options,\n    rest = __rest(options, [\"reverse\", \"slice\", \"channel\", \"ordinal\"]);\n  return (I, mark) => {\n    if (!ordinal) {\n      return sortQuantitative(I, mark, Object.assign({\n        reverse,\n        slice,\n        channel\n      }, rest));\n    }\n    return sortOrdinal(I, mark, Object.assign({\n      reverse,\n      slice,\n      channel\n    }, rest));\n  };\n};\nSort.props = {};","map":{"version":3,"names":["deepMix","groupSort","max","min","sum","mean","median","sort","columnOf","createReducer","channel","options","encode","by","reducer","V","GI","i","length","Error","sortQuantitative","I","mark","reverse","sortedI","filterIndex","values","specifiedDomain","Array","isArray","domain","Set","filter","has","sortOrdinal","slice","rest","__rest","scale","_a","T","normalizeReducer","SI","sortedDomain","s","slicedDomain","Sort","ordinal","Object","assign","props"],"sources":["transform/sort.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}