{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { Sankey as SankeyTransform } from '../data/sankey';\nimport { subObject } from '../utils/helper';\nimport { subTooltip, maybeAnimation } from '../utils/mark';\nimport { field, initializeData } from './utils';\nconst DEFAULT_LAYOUT_OPTIONS = {\n  nodeId: d => d.key,\n  nodeWidth: 0.02,\n  nodePadding: 0.02\n};\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'polygon',\n    x: 'x',\n    y: 'y'\n  },\n  scale: {\n    x: {\n      type: 'identity'\n    },\n    y: {\n      type: 'identity'\n    }\n  },\n  style: {\n    stroke: '#000'\n  }\n};\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'ribbon',\n    x: 'x',\n    y: 'y'\n  },\n  style: {\n    fillOpacity: 0.5,\n    stroke: undefined\n  }\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  textAlign: d => d.x[0] < 0.5 ? 'start' : 'end',\n  position: d => d.x[0] < 0.5 ? 'right' : 'left',\n  fontSize: 10\n};\n/**\n * @todo Add interaction\n * @todo Add source-link color mode\n */\nexport const Sankey = options => {\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {}\n  } = options;\n  // Initialize data, generating nodes by link if is not specified.\n  const {\n    links,\n    nodes\n  } = initializeData(data, encode);\n  // Extract encode for node and link.\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const {\n    key: nodeKey = d => d.key,\n    color = nodeKey\n  } = nodeEncode;\n  // Transform data, using nodeKey as nodeId.\n  const {\n    links: linkData,\n    nodes: nodeData\n  } = SankeyTransform(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), {\n    nodeId: field(nodeKey)\n  }), layout))({\n    links,\n    nodes\n  });\n  // Extract label style and apply defaults.\n  const _a = subObject(style, 'label'),\n    {\n      text = nodeKey,\n      spacing = 5\n    } = _a,\n    labelStyle = __rest(_a, [\"text\", \"spacing\"]);\n  const key1 = field(nodeKey);\n  const nodeTooltip = subTooltip(tooltip, 'node', {\n    title: key1,\n    items: [{\n      field: 'value'\n    }]\n  }, true);\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [d => ({\n      name: 'source',\n      value: key1(d.source)\n    }), d => ({\n      name: 'target',\n      value: key1(d.target)\n    })]\n  });\n  return [deepMix({}, DEFAULT_NODE_OPTIONS, {\n    data: nodeData,\n    encode: Object.assign(Object.assign({}, nodeEncode), {\n      color\n    }),\n    scale,\n    style: subObject(style, 'node'),\n    labels: [Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), {\n      text,\n      dx: d => d.x[0] < 0.5 ? spacing : -spacing\n    }), labelStyle), ...nodeLabels],\n    tooltip: nodeTooltip,\n    animate: maybeAnimation(animate, 'node'),\n    axis: false\n  }), deepMix({}, DEFAULT_LINK_OPTIONS, {\n    data: linkData,\n    encode: linkEncode,\n    labels: linkLabels,\n    style: Object.assign({\n      fill: linkEncode.color ? undefined : '#aaa',\n      strokeWidth: 0\n    }, subObject(style, 'link')),\n    tooltip: linkTooltip,\n    animate: maybeAnimation(animate, 'link')\n  })];\n};\nSankey.props = {};","map":{"version":3,"names":["deepMix","Sankey","SankeyTransform","subObject","subTooltip","maybeAnimation","field","initializeData","DEFAULT_LAYOUT_OPTIONS","nodeId","d","key","nodeWidth","nodePadding","DEFAULT_NODE_OPTIONS","type","axis","legend","encode","shape","x","y","scale","style","stroke","DEFAULT_LINK_OPTIONS","fillOpacity","undefined","DEFAULT_LABEL_OPTIONS","textAlign","position","fontSize","options","data","layout","nodeLabels","linkLabels","animate","tooltip","links","nodes","nodeEncode","linkEncode","nodeKey","color","linkData","nodeData","Object","assign","_a","text","spacing","labelStyle","__rest","key1","nodeTooltip","title","items","linkTooltip","name","value","source","target","labels","dx","fill","strokeWidth","props"],"sources":["mark/sankey.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,SAASA,OAAO,QAAQ,YAAY;AAGpC,SAASC,MAAM,IAAIC,eAAe,QAAQ,gBAAgB;AAC1D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,EAAEC,cAAc,QAAQ,SAAS;AAE/C,MAAMC,sBAAsB,GAAG;EAC7BC,MAAM,EAAGC,CAAC,IAAKA,CAAC,CAACC,GAAG;EACpBC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE;CACd;AAED,MAAMC,oBAAoB,GAAG;EAC3BC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE;IACNC,KAAK,EAAE,SAAS;IAChBC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE;GACJ;EACDC,KAAK,EAAE;IACLF,CAAC,EAAE;MAAEL,IAAI,EAAE;IAAU,CAAE;IACvBM,CAAC,EAAE;MAAEN,IAAI,EAAE;IAAU;GACtB;EACDQ,KAAK,EAAE;IACLC,MAAM,EAAE;;CAEX;AAED,MAAMC,oBAAoB,GAAG;EAC3BV,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE;IACNC,KAAK,EAAE,QAAQ;IACfC,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE;GACJ;EACDE,KAAK,EAAE;IACLG,WAAW,EAAE,GAAG;IAChBF,MAAM,EAAEG;;CAEX;AAED,MAAMC,qBAAqB,GAAG;EAC5BC,SAAS,EAAGnB,CAAC,IAAMA,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,GAAG,KAAM;EAClDU,QAAQ,EAAGpB,CAAC,IAAMA,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,GAAG,MAAO;EAClDW,QAAQ,EAAE;CACX;AAID;;;;AAIA,OAAO,MAAM9B,MAAM,GAAuB+B,OAAO,IAAI;EACnD,MAAM;IACJC,IAAI;IACJf,MAAM,GAAG,EAAE;IACXI,KAAK;IACLC,KAAK,GAAG,EAAE;IACVW,MAAM,GAAG,EAAE;IACXC,UAAU,GAAG,EAAE;IACfC,UAAU,GAAG,EAAE;IACfC,OAAO,GAAG,EAAE;IACZC,OAAO,GAAG;EAAE,CACb,GAAGN,OAAO;EAEX;EACA,MAAM;IAAEO,KAAK;IAAEC;EAAK,CAAE,GAAGjC,cAAc,CAAC0B,IAAI,EAAEf,MAAM,CAAC;EAErD;EACA,MAAMuB,UAAU,GAAGtC,SAAS,CAACe,MAAM,EAAE,MAAM,CAAC;EAC5C,MAAMwB,UAAU,GAAGvC,SAAS,CAACe,MAAM,EAAE,MAAM,CAAC;EAC5C,MAAM;IAAEP,GAAG,EAAEgC,OAAO,GAAIjC,CAAC,IAAKA,CAAC,CAACC,GAAG;IAAEiC,KAAK,GAAGD;EAAO,CAAE,GAAGF,UAAU;EAEnE;EACA,MAAM;IAAEF,KAAK,EAAEM,QAAQ;IAAEL,KAAK,EAAEM;EAAQ,CAAE,GAAG5C,eAAe,CAAA6C,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACvDxC,sBAAsB;IACzBC,MAAM,EAAEH,KAAK,CAACqC,OAAO;EAAC,IACnBT,MAAM,EACT,CAAC;IAAEK,KAAK;IAAEC;EAAK,CAAE,CAAC;EAEpB;EACA,MAAMS,EAAA,GAIF9C,SAAS,CAACoB,KAAK,EAAE,OAAO,CAAC;IAJvB;MACJ2B,IAAI,GAAGP,OAAO;MACdQ,OAAO,GAAG;IAAC,IAAAF,EAEgB;IADxBG,UAAU,GAAAC,MAAA,CAAAJ,EAAA,EAHT,mBAIL,CAA4B;EAE7B,MAAMK,IAAI,GAAGhD,KAAK,CAACqC,OAAO,CAAC;EAE3B,MAAMY,WAAW,GAAGnD,UAAU,CAC5BkC,OAAO,EACP,MAAM,EACN;IACEkB,KAAK,EAAEF,IAAI;IACXG,KAAK,EAAE,CAAC;MAAEnD,KAAK,EAAE;IAAO,CAAE;GAC3B,EACD,IAAI,CACL;EACD,MAAMoD,WAAW,GAAGtD,UAAU,CAACkC,OAAO,EAAE,MAAM,EAAE;IAC9CkB,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,CACJ/C,CAAC,KAAM;MAAEiD,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAEN,IAAI,CAAC5C,CAAC,CAACmD,MAAM;IAAC,CAAE,CAAC,EACjDnD,CAAC,KAAM;MAAEiD,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAEN,IAAI,CAAC5C,CAAC,CAACoD,MAAM;IAAC,CAAE,CAAC;GAErD,CAAC;EAEF,OAAO,CACL9D,OAAO,CAAC,EAAE,EAAEc,oBAAoB,EAAE;IAChCmB,IAAI,EAAEa,QAAQ;IACd5B,MAAM,EAAA6B,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOP,UAAU;MAAEG;IAAK,EAAE;IAChCtB,KAAK;IACLC,KAAK,EAAEpB,SAAS,CAACoB,KAAK,EAAE,MAAM,CAAC;IAC/BwC,MAAM,EAAE,C,8CAEDnC,qBAAqB;MACxBsB,IAAI;MACJc,EAAE,EAAGtD,CAAC,IAAMA,CAAC,CAACU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG+B,OAAO,GAAG,CAACA;IAAQ,IAC3CC,UAAU,GAEf,GAAGjB,UAAU,CACd;IACDG,OAAO,EAAEiB,WAAW;IACpBlB,OAAO,EAAEhC,cAAc,CAACgC,OAAO,EAAE,MAAM,CAAC;IACxCrB,IAAI,EAAE;GACP,CAAC,EACFhB,OAAO,CAAC,EAAE,EAAEyB,oBAAoB,EAAE;IAChCQ,IAAI,EAAEY,QAAQ;IACd3B,MAAM,EAAEwB,UAAU;IAClBqB,MAAM,EAAE3B,UAAU;IAClBb,KAAK,EAAAwB,MAAA,CAAAC,MAAA;MACHiB,IAAI,EAAEvB,UAAU,CAACE,KAAK,GAAGjB,SAAS,GAAG,MAAM;MAC3CuC,WAAW,EAAE;IAAC,GACX/D,SAAS,CAACoB,KAAK,EAAE,MAAM,CAAC,CAC5B;IACDe,OAAO,EAAEoB,WAAW;IACpBrB,OAAO,EAAEhC,cAAc,CAACgC,OAAO,EAAE,MAAM;GACxC,CAAC,CACH;AACH,CAAC;AAEDpC,MAAM,CAACkE,KAAK,GAAG,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}