{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\n/**\n * Adaptor return default options for raw options.\n */\nexport function useDefaultAdaptor(adaptor) {\n  return (options, ...rest) => deepMix({}, adaptor(options, ...rest), options);\n}\n/**\n * Adaptor return options override raw options.\n */\nexport function useOverrideAdaptor(adaptor) {\n  return (options, ...rest) => deepMix({}, options, adaptor(options, ...rest));\n}\nexport function mergeData(dataDescriptor, dataValue) {\n  if (!dataDescriptor) return dataValue;\n  if (Array.isArray(dataDescriptor)) return dataDescriptor;\n  const {\n      value = dataValue\n    } = dataDescriptor,\n    rest = __rest(dataDescriptor, [\"value\"]);\n  return Object.assign(Object.assign({}, rest), {\n    value\n  });\n}","map":{"version":3,"names":["deepMix","useDefaultAdaptor","adaptor","options","rest","useOverrideAdaptor","mergeData","dataDescriptor","dataValue","Array","isArray","value","__rest","Object","assign"],"sources":["composition/utils.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,SAASA,OAAO,QAAQ,YAAY;AAIpC;;;AAGA,OAAM,SAAUC,iBAAiBA,CAAIC,OAAmB;EACtD,OAAO,CAACC,OAAQ,EAAE,GAAGC,IAAI,KAAKJ,OAAO,CAAC,EAAE,EAAEE,OAAO,CAACC,OAAO,EAAE,GAAGC,IAAI,CAAC,EAAED,OAAO,CAAC;AAC/E;AAEA;;;AAGA,OAAM,SAAUE,kBAAkBA,CAAIH,OAAmB;EACvD,OAAO,CAACC,OAAQ,EAAE,GAAGC,IAAI,KAAKJ,OAAO,CAAC,EAAE,EAAEG,OAAO,EAAED,OAAO,CAACC,OAAO,EAAE,GAAGC,IAAI,CAAC,CAAC;AAC/E;AAEA,OAAM,SAAUE,SAASA,CACvBC,cAA0D,EAC1DC,SAAgB;EAEhB,IAAI,CAACD,cAAc,EAAE,OAAOC,SAAS;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACH,cAAc,CAAC,EAAE,OAAOA,cAAc;EACxD,MAAM;MAAEI,KAAK,GAAGH;IAAS,IAAcD,cAAc;IAAvBH,IAAI,GAAAQ,MAAA,CAAKL,cAAc,EAA/C,SAA8B,CAAiB;EACrD,OAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYV,IAAI;IAAEO;EAAK;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}