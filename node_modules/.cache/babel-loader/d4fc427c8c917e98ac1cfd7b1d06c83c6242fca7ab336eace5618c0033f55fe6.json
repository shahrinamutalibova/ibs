{"ast":null,"code":"import { __read } from \"tslib\";\nimport { isNil } from '@antv/util';\nimport { getFont, measureTextWidth } from '../../../util';\nimport { getBBox } from '../utils/bounds';\nimport { boundTest } from '../utils/test';\nfunction parseLengthString(str, font) {\n  if (font === void 0) {\n    font = {};\n  }\n  if (isNil(str)) return 0;\n  if (typeof str === 'number') return str;\n  return Math.floor(measureTextWidth(str, font));\n}\nexport default function ellipseLabels(labels, overlapCfg, attr, utils) {\n  if (labels.length <= 1) return;\n  var _a = overlapCfg.suffix,\n    suffix = _a === void 0 ? '...' : _a,\n    minLength = overlapCfg.minLength,\n    _b = overlapCfg.maxLength,\n    maxLength = _b === void 0 ? Infinity : _b,\n    _c = overlapCfg.step,\n    ellipsisStep = _c === void 0 ? ' ' : _c,\n    _d = overlapCfg.margin,\n    margin = _d === void 0 ? [0, 0, 0, 0] : _d;\n  var font = getFont(utils.getTextShape(labels[0]));\n  var step = parseLengthString(ellipsisStep, font);\n  var min = minLength ? parseLengthString(minLength, font) : step;\n  var max = parseLengthString(maxLength, font);\n  // Enable to ellipsis label when overlap.\n  if (isNil(max) || max === Infinity) {\n    max = Math.max.apply(null, labels.map(function (d) {\n      return getBBox(d).width;\n    }));\n  }\n  // Generally, 100 ticks cost less than 300ms. If cost time exceed, means ticks count is too large to see.\n  var source = labels.slice();\n  var _e = __read(margin, 4),\n    _f = _e[0],\n    top = _f === void 0 ? 0 : _f,\n    _g = _e[1],\n    right = _g === void 0 ? 0 : _g,\n    _h = _e[2],\n    bottom = _h === void 0 ? top : _h,\n    _j = _e[3],\n    left = _j === void 0 ? right : _j;\n  var _loop_1 = function (allowedLength) {\n    source.forEach(function (label) {\n      utils.ellipsis(utils.getTextShape(label), allowedLength, suffix);\n    });\n    source = boundTest(labels, attr, margin);\n    // 碰撞检测\n    if (source.length < 1) return {\n      value: void 0\n    };\n  };\n  for (var allowedLength = max; allowedLength > min + step; allowedLength -= step) {\n    var state_1 = _loop_1(allowedLength);\n    if (typeof state_1 === \"object\") return state_1.value;\n  }\n}","map":{"version":3,"names":["isNil","getFont","measureTextWidth","getBBox","boundTest","parseLengthString","str","font","Math","floor","ellipseLabels","labels","overlapCfg","attr","utils","length","_a","suffix","minLength","_b","maxLength","Infinity","_c","step","ellipsisStep","_d","margin","getTextShape","min","max","apply","map","d","width","source","slice","_e","__read","_f","top","_g","right","_h","bottom","_j","left","allowedLength","forEach","label","ellipsis"],"sources":["ui/axis/overlap/autoEllipsis.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}