{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\ibs\\\\IBS-adminpage\\\\src\\\\components\\\\users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst EmployeeListPage = () => {\n  _s();\n  const [employees, setEmployees] = useState(JSON.parse(localStorage.getItem('employees')) || []);\n  const [filteredEmployees, setFilteredEmployees] = useState(employees);\n\n  // Update local storage whenever employees list changes\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }, [employees]);\n\n  // Search function to filter employees\n  const handleSearch = value => {\n    const filteredData = employees.filter(employee => Object.values(employee).some(item => item.toLowerCase().includes(value.toLowerCase())));\n    setFilteredEmployees(filteredData);\n  };\n\n  // Table columns\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Position',\n    dataIndex: 'position',\n    key: 'position'\n  }, {\n    title: 'Department',\n    dataIndex: 'department',\n    key: 'department'\n  }];\n\n  // Add dummy data (you would have functionalities to add real employee data)\n  const addDummyData = () => {\n    const newEmployee = {\n      key: String(employees.length),\n      name: `Employee ${employees.length}`,\n      position: 'Position',\n      department: 'Department'\n    };\n    setEmployees([...employees, newEmployee]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Search for employees\",\n      onSearch: handleSearch,\n      style: {\n        width: 200,\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addDummyData,\n      type: \"primary\",\n      style: {\n        marginBottom: '10px'\n      },\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: filteredEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeListPage, \"KdZhnRXADp7fTUZPvGpf/eYYNfo=\");\n_c = EmployeeListPage;\nexport default EmployeeListPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeListPage\");","map":{"version":3,"names":["React","useState","useEffect","Table","Input","Button","jsxDEV","_jsxDEV","Search","EmployeeListPage","_s","employees","setEmployees","JSON","parse","localStorage","getItem","filteredEmployees","setFilteredEmployees","setItem","stringify","handleSearch","value","filteredData","filter","employee","Object","values","some","item","toLowerCase","includes","columns","title","dataIndex","key","addDummyData","newEmployee","String","length","name","position","department","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onSearch","width","marginBottom","onClick","type","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/ibs/IBS-adminpage/src/components/users.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Input, Button } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nconst EmployeeListPage = () => {\r\n  const [employees, setEmployees] = useState(JSON.parse(localStorage.getItem('employees')) || []);\r\n  const [filteredEmployees, setFilteredEmployees] = useState(employees);\r\n\r\n  // Update local storage whenever employees list changes\r\n  useEffect(() => {\r\n    localStorage.setItem('employees', JSON.stringify(employees));\r\n  }, [employees]);\r\n\r\n  // Search function to filter employees\r\n  const handleSearch = (value) => {\r\n    const filteredData = employees.filter(employee =>\r\n      Object.values(employee).some(\r\n        (item) => item.toLowerCase().includes(value.toLowerCase())\r\n      )\r\n    );\r\n    setFilteredEmployees(filteredData);\r\n  };\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name', \r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Position',\r\n      dataIndex: 'position',\r\n      key: 'position',\r\n    },\r\n    {\r\n      title: 'Department',\r\n      dataIndex: 'department',\r\n      key: 'department',\r\n    }\r\n  ];\r\n\r\n  // Add dummy data (you would have functionalities to add real employee data)\r\n  const addDummyData = () => {\r\n    const newEmployee = {\r\n      key: String(employees.length),\r\n      name: `Employee ${employees.length}`,\r\n      position: 'Position',\r\n      department: 'Department'\r\n    };\r\n    setEmployees([...employees, newEmployee]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Employee List</h2>\r\n      <Search\r\n        placeholder=\"Search for employees\"\r\n        onSearch={handleSearch}\r\n        style={{ width: 200, marginBottom: '10px' }}\r\n      />\r\n      <Button onClick={addDummyData} type=\"primary\" style={{ marginBottom: '10px' }}>\r\n        Add Employee\r\n      </Button>\r\n      <Table columns={columns} dataSource={filteredEmployees} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeListPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}