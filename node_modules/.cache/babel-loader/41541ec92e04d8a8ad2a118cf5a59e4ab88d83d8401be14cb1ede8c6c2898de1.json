{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL, AUTH_PREFIX_PATH } from './AppConfig';\nimport history from '../history';\nimport { AUTH_TOKEN, TOKEN_PAYLOAD_KEY } from '../redux/constants/Auth';\nimport { notification } from 'antd';\nconst service = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 60000\n});\nservice.interceptors.request.use(config => {\n  const jwtToken = localStorage.getItem(AUTH_TOKEN);\n  if (jwtToken) {\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken;\n  }\n  return config;\n}, error => {\n  notification.error({\n    message: 'Error'\n  });\n  Promise.reject(error);\n});\n\n/***** API respone interceptor *****/\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  let notificationParam = {\n    message: \"\"\n  };\n  notificationParam.message = error.response.data.message;\n\n  /***** Remove token and redirect *****/\n  if (error.response.status === 400 || error.response.status === 403 || error.response.status === 401) {\n    notificationParam.message = 'Authentication Fail';\n    notificationParam.description = 'Please login again';\n    localStorage.removeItem(AUTH_TOKEN);\n    history.push(AUTH_PREFIX_PATH);\n    window.location.reload();\n  }\n  if (error.response.status === 404) notificationParam.message = 'Not Found';\n  if (error.response.status === 500) notificationParam.message = \"Interval server error\";\n  if (error.response.status === 508) notificationParam.message = 'Time Out';\n  if (notificationParam.message) notification.error(notificationParam);\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","API_BASE_URL","AUTH_PREFIX_PATH","history","AUTH_TOKEN","TOKEN_PAYLOAD_KEY","notification","service","create","baseURL","timeout","interceptors","request","use","config","jwtToken","localStorage","getItem","headers","error","message","Promise","reject","response","data","notificationParam","status","description","removeItem","push","window","location","reload"],"sources":["C:/Users/hp/Desktop/ibs/IBS-adminpage/src/config/FetchInterceptor.js"],"sourcesContent":["import axios from 'axios'\r\nimport {API_BASE_URL, AUTH_PREFIX_PATH} from './AppConfig';\r\nimport history from '../history';\r\nimport {AUTH_TOKEN, TOKEN_PAYLOAD_KEY} from '../redux/constants/Auth';\r\nimport {notification} from 'antd';\r\n\r\nconst service = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    timeout: 60000\r\n})\r\n\r\n\r\nservice.interceptors.request.use(config => {\r\n    const jwtToken = localStorage.getItem(AUTH_TOKEN);\r\n\r\n    if (jwtToken) {\r\n        config.headers[TOKEN_PAYLOAD_KEY] = jwtToken;\r\n    }\r\n\r\n    return config;\r\n}, error => {\r\n    notification.error({message: 'Error'});\r\n    Promise.reject(error);\r\n})\r\n\r\n/***** API respone interceptor *****/\r\nservice.interceptors.response.use((response) => {\r\n    return response.data\r\n}, (error) => {\r\n    let notificationParam = {message: \"\"};\r\n    notificationParam.message = error.response.data.message;\r\n\r\n    /***** Remove token and redirect *****/\r\n    if (error.response.status === 400 || error.response.status === 403 || error.response.status === 401) {\r\n        notificationParam.message = 'Authentication Fail';\r\n        notificationParam.description = 'Please login again';\r\n        localStorage.removeItem(AUTH_TOKEN);\r\n        history.push(AUTH_PREFIX_PATH);\r\n        window.location.reload();\r\n    }\r\n\r\n    if (error.response.status === 404) notificationParam.message = 'Not Found';\r\n    if (error.response.status === 500) notificationParam.message = \"Interval server error\";\r\n    if (error.response.status === 508) notificationParam.message = 'Time Out';\r\n    if (notificationParam.message) notification.error(notificationParam)\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default service;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,EAAEC,gBAAgB,QAAO,aAAa;AAC1D,OAAOC,OAAO,MAAM,YAAY;AAChC,SAAQC,UAAU,EAAEC,iBAAiB,QAAO,yBAAyB;AACrE,SAAQC,YAAY,QAAO,MAAM;AAEjC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACzBC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE;AACb,CAAC,CAAC;AAGFH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACvC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAACb,UAAU,CAAC;EAEjD,IAAIW,QAAQ,EAAE;IACVD,MAAM,CAACI,OAAO,CAACb,iBAAiB,CAAC,GAAGU,QAAQ;EAChD;EAEA,OAAOD,MAAM;AACjB,CAAC,EAAEK,KAAK,IAAI;EACRb,YAAY,CAACa,KAAK,CAAC;IAACC,OAAO,EAAE;EAAO,CAAC,CAAC;EACtCC,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AACzB,CAAC,CAAC;;AAEF;AACAZ,OAAO,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAAEU,QAAQ,IAAK;EAC5C,OAAOA,QAAQ,CAACC,IAAI;AACxB,CAAC,EAAGL,KAAK,IAAK;EACV,IAAIM,iBAAiB,GAAG;IAACL,OAAO,EAAE;EAAE,CAAC;EACrCK,iBAAiB,CAACL,OAAO,GAAGD,KAAK,CAACI,QAAQ,CAACC,IAAI,CAACJ,OAAO;;EAEvD;EACA,IAAID,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIP,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIP,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACjGD,iBAAiB,CAACL,OAAO,GAAG,qBAAqB;IACjDK,iBAAiB,CAACE,WAAW,GAAG,oBAAoB;IACpDX,YAAY,CAACY,UAAU,CAACxB,UAAU,CAAC;IACnCD,OAAO,CAAC0B,IAAI,CAAC3B,gBAAgB,CAAC;IAC9B4B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B;EAEA,IAAIb,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAED,iBAAiB,CAACL,OAAO,GAAG,WAAW;EAC1E,IAAID,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAED,iBAAiB,CAACL,OAAO,GAAG,uBAAuB;EACtF,IAAID,KAAK,CAACI,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAED,iBAAiB,CAACL,OAAO,GAAG,UAAU;EACzE,IAAIK,iBAAiB,CAACL,OAAO,EAAEd,YAAY,CAACa,KAAK,CAACM,iBAAiB,CAAC;EAEpE,OAAOJ,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,eAAeZ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}