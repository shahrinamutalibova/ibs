{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { Band, Linear } from '@antv/scale';\nimport { clone, isArray, isFunction, isNumber } from '@antv/util';\nimport { Component } from '../../core';\nimport { maybeAppend, select, subStyleProps } from '../../util';\nimport { Columns } from './columns';\nimport { Lines } from './lines';\nimport { dataToLines, lineToCurvePath, lineToLinePath, linesToAreaPaths, linesToStackAreaPaths, linesToStackCurveAreaPaths } from './path';\nimport { getRange, getStackedData } from './utils';\nvar Sparkline = /** @class */function (_super) {\n  __extends(Sparkline, _super);\n  function Sparkline(options) {\n    return _super.call(this, options, {\n      type: 'line',\n      width: 200,\n      height: 20,\n      isStack: false,\n      color: ['#83daad', '#edbf45', '#d2cef9', '#e290b3', '#6f63f4'],\n      smooth: true,\n      lineLineWidth: 1,\n      areaOpacity: 0,\n      isGroup: false,\n      columnLineWidth: 1,\n      columnStroke: '#fff',\n      scale: 1,\n      spacing: 0\n    }) || this;\n  }\n  Object.defineProperty(Sparkline.prototype, \"rawData\", {\n    /**\n     * 将data统一格式化为数组形式\n     * 如果堆叠，则生成堆叠数据\n     */\n    get: function () {\n      var rawData = this.attributes.data;\n      if (!rawData || (rawData === null || rawData === void 0 ? void 0 : rawData.length) === 0) return [[]];\n      var data = clone(rawData);\n      // number[] -> number[][]\n      return isNumber(data[0]) ? [data] : data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"data\", {\n    get: function () {\n      if (this.attributes.isStack) return getStackedData(this.rawData);\n      return this.rawData;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"scales\", {\n    get: function () {\n      return this.createScales(this.data);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"baseline\", {\n    /**\n     * 基准线，默认为 0\n     */\n    get: function () {\n      var y = this.scales.y;\n      var _a = __read(y.getOptions().domain || [0, 0], 2),\n        y1 = _a[0],\n        y2 = _a[1];\n      if (y2 < 0) {\n        return y.map(y2);\n      }\n      return y.map(y1 < 0 ? 0 : y1);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"containerShape\", {\n    get: function () {\n      var _a = this.attributes,\n        width = _a.width,\n        height = _a.height;\n      return {\n        width: width,\n        height: height\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"linesStyle\", {\n    get: function () {\n      var _this = this;\n      var _a = this.attributes,\n        type = _a.type,\n        isStack = _a.isStack,\n        smooth = _a.smooth;\n      if (type !== 'line') throw new Error('linesStyle can only be used in line type');\n      var areaStyle = subStyleProps(this.attributes, 'area');\n      var lineStyle = subStyleProps(this.attributes, 'line');\n      var width = this.containerShape.width;\n      var data = this.data;\n      if (data[0].length === 0) return {\n        lines: [],\n        areas: []\n      };\n      var _b = this.scales,\n        x = _b.x,\n        y = _b.y;\n      // 线条Path\n      var lines = dataToLines(data, {\n        type: 'line',\n        x: x,\n        y: y\n      });\n      // 生成区域path\n      var areas = [];\n      if (areaStyle) {\n        var baseline = this.baseline;\n        if (isStack) {\n          areas = smooth ? linesToStackCurveAreaPaths(lines, width, baseline) : linesToStackAreaPaths(lines, width, baseline);\n        } else {\n          areas = linesToAreaPaths(lines, smooth, width, baseline);\n        }\n      }\n      return {\n        lines: lines.map(function (line, idx) {\n          return __assign({\n            stroke: _this.getColor(idx),\n            path: smooth ? lineToCurvePath(line) : lineToLinePath(line)\n          }, lineStyle);\n        }),\n        areas: areas.map(function (path, idx) {\n          return __assign({\n            path: path,\n            fill: _this.getColor(idx)\n          }, areaStyle);\n        })\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sparkline.prototype, \"columnsStyle\", {\n    get: function () {\n      var _this = this;\n      var columnStyle = subStyleProps(this.attributes, 'column');\n      var _a = this.attributes,\n        isStack = _a.isStack,\n        type = _a.type,\n        scale = _a.scale;\n      if (type !== 'column') throw new Error('columnsStyle can only be used in column type');\n      var height = this.containerShape.height;\n      var data = this.rawData;\n      if (!data) return {\n        columns: []\n      };\n      if (isStack) data = getStackedData(data);\n      var _b = this.createScales(data),\n        x = _b.x,\n        y = _b.y;\n      var _c = __read(getRange(data), 2),\n        minVal = _c[0],\n        maxVal = _c[1];\n      var heightScale = new Linear({\n        domain: [0, maxVal - (minVal > 0 ? 0 : minVal)],\n        range: [0, height * scale]\n      });\n      var bandWidth = x.getBandWidth();\n      var rawData = this.rawData;\n      return {\n        columns: data.map(function (column, i) {\n          return column.map(function (val, j) {\n            var barWidth = bandWidth / data.length;\n            var getShape = function () {\n              return {\n                x: x.map(j) + barWidth * i,\n                y: val >= 0 ? y.map(val) : y.map(0),\n                width: barWidth,\n                height: heightScale.map(Math.abs(val))\n              };\n            };\n            var getStackShape = function () {\n              return {\n                x: x.map(j),\n                y: y.map(val),\n                width: bandWidth,\n                height: heightScale.map(rawData[i][j])\n              };\n            };\n            return __assign(__assign({\n              fill: _this.getColor(i)\n            }, columnStyle), isStack ? getStackShape() : getShape());\n          });\n        })\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Sparkline.prototype.render = function (attributes, container) {\n    maybeAppend(container, '.container', 'rect').attr('className', 'container').node();\n    var type = attributes.type;\n    var className = \"spark\".concat(type);\n    var style = type === 'line' ? this.linesStyle : this.columnsStyle;\n    select(container).selectAll('.spark').data([type]).join(function (enter) {\n      return enter.append(function (type) {\n        if (type === 'line') return new Lines({\n          className: className,\n          style: style\n        });\n        return new Columns({\n          className: className,\n          style: style\n        });\n      }).attr('className', \"spark \".concat(className));\n    }, function (update) {\n      return update.update(style);\n    }, function (exit) {\n      return exit.remove();\n    });\n  };\n  /**\n   * 根据数据索引获取color\n   */\n  Sparkline.prototype.getColor = function (index) {\n    var color = this.attributes.color;\n    if (isArray(color)) {\n      return color[index % color.length];\n    }\n    if (isFunction(color)) {\n      return color.call(null, index);\n    }\n    return color;\n  };\n  /**\n   * 根据数据生成scale\n   */\n  Sparkline.prototype.createScales = function (data) {\n    var _a, _b;\n    var _c = this.attributes,\n      type = _c.type,\n      scale = _c.scale,\n      _d = _c.range,\n      range = _d === void 0 ? [] : _d,\n      spacing = _c.spacing;\n    var _e = this.containerShape,\n      width = _e.width,\n      height = _e.height;\n    var _f = __read(getRange(data), 2),\n      minVal = _f[0],\n      maxVal = _f[1];\n    var yScale = new Linear({\n      domain: [(_a = range[0]) !== null && _a !== void 0 ? _a : minVal, (_b = range[1]) !== null && _b !== void 0 ? _b : maxVal],\n      range: [height, height * (1 - scale)]\n    });\n    if (type === 'line') {\n      return {\n        type: type,\n        x: new Linear({\n          domain: [0, data[0].length - 1],\n          range: [0, width]\n        }),\n        y: yScale\n      };\n    }\n    return {\n      type: type,\n      x: new Band({\n        domain: data[0].map(function (val, idx) {\n          return idx;\n        }),\n        range: [0, width],\n        paddingInner: spacing,\n        paddingOuter: spacing / 2,\n        align: 0.5\n      }),\n      y: yScale\n    };\n  };\n  Sparkline.tag = 'sparkline';\n  return Sparkline;\n}(Component);\nexport { Sparkline };","map":{"version":3,"names":["Band","Linear","clone","isArray","isFunction","isNumber","Component","maybeAppend","select","subStyleProps","Columns","Lines","dataToLines","lineToCurvePath","lineToLinePath","linesToAreaPaths","linesToStackAreaPaths","linesToStackCurveAreaPaths","getRange","getStackedData","Sparkline","_super","__extends","options","call","type","width","height","isStack","color","smooth","lineLineWidth","areaOpacity","isGroup","columnLineWidth","columnStroke","scale","spacing","Object","defineProperty","prototype","get","rawData","attributes","data","length","createScales","y","scales","_a","__read","getOptions","domain","y1","y2","map","_this","Error","areaStyle","lineStyle","containerShape","lines","areas","_b","x","baseline","line","idx","__assign","stroke","getColor","path","fill","columnStyle","columns","_c","minVal","maxVal","heightScale","range","bandWidth","getBandWidth","column","i","val","j","barWidth","getShape","Math","abs","getStackShape","render","container","attr","node","className","concat","style","linesStyle","columnsStyle","selectAll","join","enter","append","update","exit","remove","index","_d","_e","_f","yScale","paddingInner","paddingOuter","align","tag"],"sources":["ui/sparkline/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}