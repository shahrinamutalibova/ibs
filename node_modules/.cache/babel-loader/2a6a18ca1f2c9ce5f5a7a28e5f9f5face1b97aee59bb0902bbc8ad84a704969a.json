{"ast":null,"code":"import axios from 'axios';\nimport { notification } from 'antd';\nimport history from '../../history';\nimport { updateState } from '../reducers';\nimport { API_BASE_URL, APP_PREFIX_PATH } from '../../config/AppConfig';\nimport { AUTH_TOKEN, TOKEN_PAYLOAD_KEY } from '../constants/Auth';\nconst authCall = ({\n  dispatch\n}) => next => action => {\n  if (action.type !== 'api/apiAuth') next(action);else {\n    const {\n      url,\n      method,\n      postData,\n      stateName\n    } = action.payload;\n    try {\n      axios({\n        url: `${API_BASE_URL}${url}`,\n        method,\n        data: postData\n      }).then(response => {\n        localStorage.setItem(AUTH_TOKEN, response.headers[TOKEN_PAYLOAD_KEY]);\n        if (stateName) {\n          dispatch(updateState({\n            [stateName]: response.data\n          }));\n        }\n        history.push(APP_PREFIX_PATH);\n        window.location.reload();\n      }).catch(error => {\n        notification.error({\n          message: error.response.data\n        });\n      }).finally(() => {\n        dispatch(updateState({\n          loginLoader: false\n        }));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\nexport default authCall;","map":{"version":3,"names":["axios","notification","history","updateState","API_BASE_URL","APP_PREFIX_PATH","AUTH_TOKEN","TOKEN_PAYLOAD_KEY","authCall","dispatch","next","action","type","url","method","postData","stateName","payload","data","then","response","localStorage","setItem","headers","push","window","location","reload","catch","error","message","finally","loginLoader","console","log"],"sources":["C:/Users/hp/Desktop/IBS-adminpage/src/redux/middleware/authCall.js"],"sourcesContent":["import axios from 'axios';\r\nimport {notification} from 'antd';\r\nimport history from '../../history';\r\nimport {updateState} from '../reducers';\r\nimport {API_BASE_URL, APP_PREFIX_PATH} from '../../config/AppConfig';\r\nimport {AUTH_TOKEN, TOKEN_PAYLOAD_KEY} from '../constants/Auth';\r\n\r\n\r\n\r\nconst authCall = ({dispatch}) => (next) => (action) => {\r\n    if (action.type !== 'api/apiAuth') next(action);\r\n    else {\r\n        const {url, method, postData, stateName} = action.payload;\r\n        try {\r\n            axios({url: `${API_BASE_URL}${url}`, method, data: postData}).then((response) => {\r\n                localStorage.setItem(AUTH_TOKEN, response.headers[TOKEN_PAYLOAD_KEY]);\r\n                if (stateName) {\r\n                    dispatch(updateState({[stateName]: response.data}));\r\n                }\r\n                history.push(APP_PREFIX_PATH);\r\n                window.location.reload();\r\n            }).catch((error) => {\r\n                notification.error({message: error.response.data});\r\n            }).finally(() => {\r\n                dispatch(updateState({loginLoader: false}));\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default authCall;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,MAAM;AACjC,OAAOC,OAAO,MAAM,eAAe;AACnC,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,YAAY,EAAEC,eAAe,QAAO,wBAAwB;AACpE,SAAQC,UAAU,EAAEC,iBAAiB,QAAO,mBAAmB;AAI/D,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAMC,IAAI,IAAMC,MAAM,IAAK;EACnD,IAAIA,MAAM,CAACC,IAAI,KAAK,aAAa,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,KAC3C;IACD,MAAM;MAACE,GAAG;MAAEC,MAAM;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGL,MAAM,CAACM,OAAO;IACzD,IAAI;MACAjB,KAAK,CAAC;QAACa,GAAG,EAAG,GAAET,YAAa,GAAES,GAAI,EAAC;QAAEC,MAAM;QAAEI,IAAI,EAAEH;MAAQ,CAAC,CAAC,CAACI,IAAI,CAAEC,QAAQ,IAAK;QAC7EC,YAAY,CAACC,OAAO,CAAChB,UAAU,EAAEc,QAAQ,CAACG,OAAO,CAAChB,iBAAiB,CAAC,CAAC;QACrE,IAAIS,SAAS,EAAE;UACXP,QAAQ,CAACN,WAAW,CAAC;YAAC,CAACa,SAAS,GAAGI,QAAQ,CAACF;UAAI,CAAC,CAAC,CAAC;QACvD;QACAhB,OAAO,CAACsB,IAAI,CAACnB,eAAe,CAAC;QAC7BoB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAChB5B,YAAY,CAAC4B,KAAK,CAAC;UAACC,OAAO,EAAED,KAAK,CAACT,QAAQ,CAACF;QAAI,CAAC,CAAC;MACtD,CAAC,CAAC,CAACa,OAAO,CAAC,MAAM;QACbtB,QAAQ,CAACN,WAAW,CAAC;UAAC6B,WAAW,EAAE;QAAK,CAAC,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IACtB;EACJ;AACJ,CAAC;AAGD,eAAerB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}