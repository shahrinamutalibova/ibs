{"ast":null,"code":"import { arc } from 'd3-shape';\nimport { Path, CSS, PropertySyntax, convertToPath } from '@antv/g';\nimport { getArcObject } from '../shape/utils';\nimport { isPolar } from '../utils/coordinate';\nimport { ScaleInX } from './scaleInX';\n/**\n * Transform mark from transparent to solid.\n */\nexport const WaveIn = (options, context) => {\n  const ZERO = 0.0001;\n  // @see https://g-next.antv.vision/zh/docs/api/css/css-properties-values-api#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7\n  CSS.registerProperty({\n    name: 'waveInArcAngle',\n    inherits: false,\n    initialValue: '',\n    interpolable: true,\n    syntax: PropertySyntax.NUMBER\n  });\n  const {\n    coordinate\n  } = context;\n  return (from, to, defaults) => {\n    const [shape] = from;\n    if (!isPolar(coordinate)) {\n      return ScaleInX(options, context)(from, to, defaults);\n    }\n    const center = coordinate.getCenter();\n    const {\n      __data__,\n      style\n    } = shape;\n    const {\n      radius = 0,\n      inset = 0,\n      fillOpacity = 1,\n      strokeOpacity = 1,\n      opacity = 1\n    } = style;\n    const {\n      points,\n      y,\n      y1\n    } = __data__;\n    const path = arc().cornerRadius(radius).padAngle(inset * Math.PI / 180);\n    const arcObject = getArcObject(coordinate, points, [y, y1]);\n    const {\n      startAngle,\n      endAngle\n    } = arcObject;\n    const pathForConversion = new Path({});\n    const createArcPath = arcParams => {\n      pathForConversion.attr({\n        d: path(arcParams),\n        transform: `translate(${center[0]}, ${center[1]})`\n      });\n      const convertedPathDefinition = convertToPath(pathForConversion);\n      pathForConversion.style.transform = '';\n      return convertedPathDefinition;\n    };\n    const keyframes = [\n    // Use custom interpolable CSS property.\n    {\n      waveInArcAngle: startAngle + ZERO,\n      fillOpacity: 0,\n      strokeOpacity: 0,\n      opacity: 0\n    }, {\n      waveInArcAngle: startAngle + ZERO,\n      fillOpacity,\n      strokeOpacity,\n      opacity,\n      offset: 0.01\n    }, {\n      waveInArcAngle: endAngle,\n      fillOpacity,\n      strokeOpacity,\n      opacity\n    }];\n    const animation = shape.animate(keyframes, Object.assign(Object.assign({}, defaults), options));\n    animation.onframe = function () {\n      shape.style.path = createArcPath(Object.assign(Object.assign({}, arcObject), {\n        endAngle: Number(shape.style.waveInArcAngle)\n      }));\n    };\n    animation.onfinish = function () {\n      shape.style.path = createArcPath(Object.assign(Object.assign({}, arcObject), {\n        endAngle: endAngle\n      }));\n    };\n    return animation;\n  };\n};\nWaveIn.props = {};","map":{"version":3,"names":["arc","Path","CSS","PropertySyntax","convertToPath","getArcObject","isPolar","ScaleInX","WaveIn","options","context","ZERO","registerProperty","name","inherits","initialValue","interpolable","syntax","NUMBER","coordinate","from","to","defaults","shape","center","getCenter","__data__","style","radius","inset","fillOpacity","strokeOpacity","opacity","points","y","y1","path","cornerRadius","padAngle","Math","PI","arcObject","startAngle","endAngle","pathForConversion","createArcPath","arcParams","attr","d","transform","convertedPathDefinition","keyframes","waveInArcAngle","offset","animation","animate","Object","assign","onframe","Number","onfinish","props"],"sources":["animation/waveIn.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}